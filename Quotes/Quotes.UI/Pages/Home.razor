@page "/"

@using Quotes.UI.DTO
@using Quotes.UI.QuotesServices
@inject IQuotesApiService QuotesApiService
@inject NavigationManager NavigationManager
<PageTitle>Quotes</PageTitle>

<MudGrid>
    <MudItem xs="12">
        <MudCard>
            <MudCardContent>
                <MudText Typo="Typo.h6">Search Quotes</MudText>
                <MudCollapse Expanded="@isSearchExpanded">
                    <MudTextField Label="Author" @bind-Value="searchAuthor"></MudTextField>
                    <MudTextField Label="Tags (comma separated)" @bind-Value="searchTags"></MudTextField>
                    <MudTextField Label="Quote Content" @bind-Value="searchContent"></MudTextField>
                    <MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="SearchQuotes">Search</MudButton>
                </MudCollapse>
                <MudButton Variant="Variant.Text" OnClick="@(()=>isSearchExpanded = !isSearchExpanded)">
                    @(isSearchExpanded ? "Hide Search" : "Show Search")
                </MudButton>
            </MudCardContent>
        </MudCard>
    </MudItem>
    <MudItem xs="12">
        <MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="AddQuote">Add Quote</MudButton>
    </MudItem>
    <MudItem xs="12">
        <MudTable Items="quotes" Hover="true" Striped="true">
            <HeaderContent>
                <MudTh>Author</MudTh>
                <MudTh>Tags</MudTh>
                <MudTh>Quote Content</MudTh>
                <MudTh></MudTh>
            </HeaderContent>
            <RowTemplate>
                <MudTd>@context.Author</MudTd>
                <MudTd>@string.Join(", ", @context.Tags)</MudTd>
                <MudTd>@context.QuoteContent</MudTd>
                <MudTd>
                    <MudIconButton Icon="@Icons.Material.Filled.Edit" Color="Color.Primary" OnClick="@(()=>EditQuote(context.Id))"></MudIconButton>
                    <MudIconButton Icon="@Icons.Material.Filled.Delete" Color="Color.Secondary" OnClick="@(()=>DeleteQuote(context.Id))"></MudIconButton>
                </MudTd>
            </RowTemplate>
        </MudTable>
    </MudItem>
</MudGrid>

@code {
    private bool isSearchExpanded = false;
    private string searchAuthor;
    private string searchTags;
    private string searchContent;
    private List<Quotes.UI.DTO.QuoteDto> quotes = new();

    protected override async Task OnInitializedAsync()
    {
        quotes = (await QuotesApiService.GetAllQuotes()).ToList();
    }

    private async Task SearchQuotes()
    {
        var tags = string.IsNullOrWhiteSpace(searchTags) ? new List<string>() : searchTags.Split(',').ToList();
        quotes = (await QuotesApiService.SearchQuotes(searchAuthor, tags, searchContent)).ToList();
    }

    private void AddQuote()
    {
        NavigationManager.NavigateTo("/add-edit-quote/0");
    }

    private void EditQuote(int id)
    {
        NavigationManager.NavigateTo($"/add-edit-quote/{id}");
    }

    private async Task DeleteQuote(int id)
    {
        await QuotesApiService.DeleteQuote(id);
        quotes = (await QuotesApiService.GetAllQuotes()).ToList();
    }
}
